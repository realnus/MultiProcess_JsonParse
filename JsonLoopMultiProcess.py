
import json
from datetime import datetime

#!/usr/bin/python

from multiprocessing import Queue, Process, current_process

# NusLib Import
import sys
sys.path.insert(1, 'C:\\Hdd_external_20220128\\Personal\\Codes\\Github\\1\\NusLib')
import NusLibGeneric

def worker_json(queue):
    name = current_process().name
    #print(f'{name} data received: {queue.get()}')
    
    #Convert To List
 
    """
    value_list = list(queue.get().values())
    id = value_list[1]
    s = value_list[2]
    c = float(value_list[3])
    o = float(value_list[4])
    """

    dict =  queue.get()
    #Read From Dictionary
    id = dict.get("E")
    s = dict.get("s")
    c = float(dict.get("c"))
    o = float(dict.get("o"))


    percent_change = NusLibGeneric.PercentChange(o,c)
    #print(f"{s} {id} {percent_change}")


jsonstring1 = """
[{"e":"24hrMiniTicker","E":1654853304167,"s":"ETHUSDT","c":"1783.33000000","o":"1824.12000000","h":"1833.00000000","l":"1745.01000000","v":"549714.84290000","q":"985569658.04603000"},{"e":"24hrMiniTicker","E":1654853303981,"s":"STEEMBTC","c":"0.00000848","o":"0.00000875","h":"0.00000940","l":"0.00000842","v":"2208048.00000000","q":"19.57260134"},{"e":"24hrMiniTicker","E":1654853304698,"s":"XLMUSDT","c":"0.13960000","o":"0.14100000","h":"0.14260000","l":"0.13700000","v":"48345010.00000000","q":"6764156.18890000"},{"e":"24hrMiniTicker","E":1654853303882,"s":"ETCUSDT","c":"21.09000000","o":"21.58000000","h":"21.66000000","l":"20.65000000","v":"370831.50000000","q":"7857959.26930000"},{"e":"24hrMiniTicker","E":1654853304418,"s":"LINKUSDT","c":"8.77000000","o":"9.14000000","h":"9.64000000","l":"8.74000000","v":"13193141.33000000","q":"122080765.52090000"},{"e":"24hrMiniTicker","E":1654853304356,"s":"BATUSDT","c":"0.38510000","o":"0.40050000","h":"0.41420000","l":"0.38170000","v":"9613164.00000000","q":"3819736.51970000"},{"e":"24hrMiniTicker","E":1654853304568,"s":"ALGOUSDT","c":"0.38890000","o":"0.41690000","h":"0.41830000","l":"0.38530000","v":"28092878.00000000","q":"11321920.76430000"},{"e":"24hrMiniTicker","E":1654853303870,"s":"DENTUSDT","c":"0.00121600","o":"0.00127900","h":"0.00128700","l":"0.00120000","v":"1933926418.00000000","q":"2399580.98886700"},{"e":"24hrMiniTicker","E":1654853304597,"s":"BNBBUSD","c":"288.80000000","o":"292.70000000","h":"293.20000000","l":"284.30000000","v":"171175.68000000","q":"49604049.66320000"},{"e":"24hrMiniTicker","E":1654853304699,"s":"BTCBUSD","c":"30020.01000000","o":"30545.57000000","h":"30680.09000000","l":"29555.00000000","v":"21812.50289000","q":"656781693.48614940"},{"e":"24hrMiniTicker","E":1654853304675,"s":"BUSDUSDT","c":"1.00080000","o":"1.00070000","h":"1.00090000","l":"1.00060000","v":"562380109.00000000","q":"562819905.05020000"},{"e":"24hrMiniTicker","E":1654853304170,"s":"ETHBUSD","c":"1781.95000000","o":"1822.78000000","h":"1835.00000000","l":"1743.00000000","v":"241872.50520000","q":"433215279.56841100"},{"e":"24hrMiniTicker","E":1654853304465,"s":"ARPAUSDT","c":"0.03775000","o":"0.04107000","h":"0.04284000","l":"0.03627000","v":"234161370.00000000","q":"9389452.54756400"},{"e":"24hrMiniTicker","E":1654853304536,"s":"BUSDTRY","c":"17.03400000","o":"17.24100000","h":"17.33300000","l":"16.16200000","v":"76561721.00000000","q":"1298427861.16000000"},{"e":"24hrMiniTicker","E":1654853303969,"s":"USDTTRY","c":"17.01500000","o":"17.22900000","h":"17.36100000","l":"16.28100000","v":"207771493.00000000","q":"3512757041.36600000"},{"e":"24hrMiniTicker","E":1654853304146,"s":"EURUSDT","c":"1.06100000","o":"1.07200000","h":"1.07900000","l":"1.06000000","v":"33360767.90000000","q":"35593509.84150000"},{"e":"24hrMiniTicker","E":1654853304640,"s":"BNTBUSD","c":"1.28000000","o":"1.30000000","h":"1.34100000","l":"1.27200000","v":"25677.80000000","q":"33693.98970000"},{"e":"24hrMiniTicker","E":1654853303873,"s":"COTIUSDT","c":"0.12700000","o":"0.13760000","h":"0.13880000","l":"0.12610000","v":"49115774.00000000","q":"6473496.63960000"},{"e":"24hrMiniTicker","E":1654853304441,"s":"SOLUSDT","c":"39.36000000","o":"41.60000000","h":"41.97000000","l":"38.92000000","v":"4306181.12000000","q":"174172777.14340000"},{"e":"24hrMiniTicker","E":1654853304493,"s":"SOLBUSD","c":"39.33000000","o":"41.58000000","h":"41.93000000","l":"38.83000000","v":"1403914.08000000","q":"56756917.80030000"},{"e":"24hrMiniTicker","E":1654853303878,"s":"HIVEUSDT","c":"0.52320000","o":"0.54920000","h":"0.56060000","l":"0.52310000","v":"1503935.00000000","q":"811025.57790000"},{"e":"24hrMiniTicker","E":1654853304447,"s":"REPUSDT","c":"9.10000000","o":"9.43000000","h":"9.59000000","l":"9.02000000","v":"65125.07000000","q":"606938.83560000"},{"e":"24hrMiniTicker","E":1654853303843,"s":"BUSDBIDR","c":"14564.00","o":"14550.00","h":"14591.00","l":"14501.00","v":"2471689.80000000","q":"35978541571.70"},{"e":"24hrMiniTicker","E":1654853304760,"s":"LINKDOWNUSDT","c":"0.01258400","o":"0.01170000","h":"0.01263000","l":"0.01025200","v":"598535983.58000000","q":"6731479.69021484"},{"e":"24hrMiniTicker","E":1654853304740,"s":"SANDUSDT","c":"1.26930000","o":"1.31860000","h":"1.32380000","l":"1.25800000","v":"15592029.00000000","q":"20128871.98350000"},{"e":"24hrMiniTicker","E":1654853304604,"s":"DOTUSDT","c":"9.10000000","o":"9.36000000","h":"9.47000000","l":"9.01000000","v":"5036637.81000000","q":"46596933.82620000"},{"e":"24hrMiniTicker","E":1654853303958,"s":"LUNAUSDT","c":"2.98140000","o":"3.01550000","h":"3.51990000","l":"2.60000000","v":"33713764.63000000","q":"102473154.23073400"},{"e":"24hrMiniTicker","E":1654853304659,"s":"BAKEBNB","c":"0.00115500","o":"0.00117400","h":"0.00120700","l":"0.00115200","v":"809626.20000000","q":"953.39165320"},{"e":"24hrMiniTicker","E":1654853304776,"s":"UNFIUSDT","c":"8.32500000","o":"8.45900000","h":"10.20000000","l":"8.03800000","v":"15900072.30000000","q":"141045540.55300000"},{"e":"24hrMiniTicker","E":1654853304032,"s":"ROSEUSDT","c":"0.06513000","o":"0.06750000","h":"0.06817000","l":"0.06463000","v":"173363040.00000000","q":"11504193.93767800"},{"e":"24hrMiniTicker","E":1654853304222,"s":"OGUSDT","c":"3.73800000","o":"3.91000000","h":"4.27600000","l":"3.60200000","v":"2751484.30000000","q":"10857198.90060000"},{"e":"24hrMiniTicker","E":1654853303897,"s":"LITUSDT","c":"0.78700000","o":"0.86400000","h":"0.86600000","l":"0.73100000","v":"20792566.40000000","q":"16682767.35500000"},{"e":"24hrMiniTicker","E":1654853304633,"s":"BAKEBUSD","c":"0.33400000","o":"0.34400000","h":"0.35300000","l":"0.32900000","v":"6855510.90000000","q":"2339433.42880000"},{"e":"24hrMiniTicker","E":1654853303860,"s":"BTGUSDT","c":"22.45000000","o":"21.93000000","h":"22.47000000","l":"21.23000000","v":"6282.10000000","q":"137393.69930000"},{"e":"24hrMiniTicker","E":1654853304663,"s":"BAKEUSDT","c":"0.33400000","o":"0.34300000","h":"0.35300000","l":"0.32800000","v":"28893030.50000000","q":"9848361.13750000"},{"e":"24hrMiniTicker","E":1654853303786,"s":"SHIBUSDT","c":"0.00001047","o":"0.00001073","h":"0.00001077","l":"0.00001032","v":"2224616938000.00","q":"23528293.39807913"},{"e":"24hrMiniTicker","E":1654853304671,"s":"POLSBUSD","c":"0.79700000","o":"0.58200000","h":"0.89900000","l":"0.56800000","v":"2969509.20000000","q":"2280945.31860000"},{"e":"24hrMiniTicker","E":1654853304153,"s":"C98USDT","c":"0.74500000","o":"0.70600000","h":"0.79000000","l":"0.69300000","v":"16792499.30000000","q":"12538496.67680000"},{"e":"24hrMiniTicker","E":1654853304773,"s":"DYDXUSDT","c":"1.72900000","o":"1.75300000","h":"1.78000000","l":"1.64700000","v":"5455591.08000000","q":"9366992.24440000"},{"e":"24hrMiniTicker","E":1654853304643,"s":"GALAUSDT","c":"0.07349000","o":"0.07751000","h":"0.07810000","l":"0.07265000","v":"405991055.00000000","q":"30741987.33137000"},{"e":"24hrMiniTicker","E":1654853303840,"s":"DENTBUSD","c":"0.00121500","o":"0.00127800","h":"0.00128600","l":"0.00120000","v":"190844481.00000000","q":"236676.28069100"},{"e":"24hrMiniTicker","E":1654853303881,"s":"DENTTRY","c":"0.02071000","o":"0.02207000","h":"0.02214000","l":"0.02012000","v":"202214594.00000000","q":"4288894.98824000"},{"e":"24hrMiniTicker","E":1654853304677,"s":"GALATRY","c":"1.25100000","o":"1.33600000","h":"1.34400000","l":"1.24500000","v":"35504083.40000000","q":"45917821.80540000"},{"e":"24hrMiniTicker","E":1654853304627,"s":"VOXELBUSD","c":"0.52550000","o":"0.51520000","h":"0.53080000","l":"0.47500000","v":"2194676.70000000","q":"1105881.56255000"},{"e":"24hrMiniTicker","E":1654853304640,"s":"VOXELUSDT","c":"0.52640000","o":"0.51540000","h":"0.52980000","l":"0.47900000","v":"5476954.20000000","q":"2772159.03542000"},{"e":"24hrMiniTicker","E":1654853304615,"s":"API3BUSD","c":"1.54500000","o":"1.48500000","h":"1.99900000","l":"1.44400000","v":"3240052.93000000","q":"5529273.16633000"},{"e":"24hrMiniTicker","E":1654853304599,"s":"API3USDT","c":"1.54600000","o":"1.48900000","h":"1.95600000","l":"1.44500000","v":"12506689.91000000","q":"21078557.83793000"},{"e":"24hrMiniTicker","E":1654853303964,"s":"GMTBUSD","c":"0.96602000","o":"1.01716000","h":"1.02724000","l":"0.95743000","v":"21212578.40000000","q":"20989939.37014500"},{"e":"24hrMiniTicker","E":1654853303897,"s":"GMTUSDT","c":"0.96651000","o":"1.01779000","h":"1.02837000","l":"0.95813000","v":"66564148.00000000","q":"65841553.39271500"},{"e":"24hrMiniTicker","E":1654853303993,"s":"STEEMUSDT","c":"0.25470000","o":"0.26720000","h":"0.28340000","l":"0.25050000","v":"4613163.00000000","q":"1231363.16984000"},{"e":"24hrMiniTicker","E":1654853304503,"s":"LUNCBUSD","c":"0.00007382","o":"0.00006858","h":"0.00008698","l":"0.00006050","v":"3189673476599.80000000","q":"237860421.74123158"},{"e":"24hrMiniTicker","E":1654853304786,"s":"OPBUSD","c":"0.85400000","o":"0.87000000","h":"0.94600000","l":"0.76700000","v":"24766940.56000000","q":"21223811.58387000"},{"e":"24hrMiniTicker","E":1654853303900,"s":"OPUSDT","c":"0.85400000","o":"0.87200000","h":"0.94700000","l":"0.76700000","v":"56364230.90000000","q":"48210946.99108000"}]
"""

#print(jsonstring1)


def ParseAndProcessData(jsonstring1):

    print("start ParseAndProcessData",
          datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f'))

    """"""
    json_dicti = json.loads(jsonstring1)
    queue = Queue()

    # Loop along dictionary keys
    for x in json_dicti:
        #id = x.get("E")

        queue.put(x)

    print(datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f'),
          "Start generating procesess")

    processes = [Process(target=worker_json, args=(queue,)) for _ in range(len(json_dicti))] 

    print(datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f'),
          "End generating procesess")

    print(datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f'),
          "Start starting procesess")

    for p in processes:
        p.start()

    print(datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f'),
              "End starting procesess")

    
    for p in processes:
        p.join()
    

    print(datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f'),
          "Completed processes")

    print("bitti")


if __name__ == "__main__":
    ParseAndProcessData(jsonstring1)


# Loop Json Object
# Load JSON string into a dictionary


"""
x = '{ "name":"John", "age":30, "city":"New York"}'

# parse x:
y = json.loads(x)
"""



"""
 # x değeri dictionary, dictionary değerleri index ile okunamaz bu sebeple list'e çeviririz
    # Convert to list
    keys_list = list(x)
    value_list = list(x.values())

    # Liste icinden index ile deger okuma
    key = keys_list[1]
    value = value_list[1]
"""
